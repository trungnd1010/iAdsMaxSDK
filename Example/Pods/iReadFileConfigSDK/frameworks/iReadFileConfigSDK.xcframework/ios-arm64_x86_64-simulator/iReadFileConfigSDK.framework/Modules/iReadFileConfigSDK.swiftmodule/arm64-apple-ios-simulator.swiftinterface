// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name iReadFileConfigSDK
import CryptoKit
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import iReadFileConfigSDK
infix operator <- : DefaultPrecedence
@_hasMissingDesignatedInitializers public class iReadFileConfigSDKManager {
  public static let shared: iReadFileConfigSDK.iReadFileConfigSDKManager
  public func getModelDataConfigFileWithPrivateKey(fileName: Swift.String = "iKameSDKConfig", key: Swift.String, privateKey: Swift.String) -> iReadFileConfigSDK.iReadFileConfigSDK_ConfigModel?
  public func readConfigFileWithPrivateKey(fileName: Swift.String = "iKameSDKConfig", key: Swift.String, privateKey: Swift.String) -> Swift.String?
  public func readConfigFile(fileName: Swift.String = "iKameSDKConfig", key: Swift.String) -> Swift.String?
  public func encryptMessage(message: Swift.String, key: CryptoKit.SymmetricKey) -> Swift.String?
  public func createSymmetricKey(from password: Swift.String) -> CryptoKit.SymmetricKey
  @objc deinit
}
public struct iReadFileConfigSDK_ConfigModel : Swift.Codable {
  public var token: Swift.String
  public var in_app_purchase: Swift.String
  public var paid_ad_impression: Swift.String
  public var subscribe: Swift.String
  public var shared_secret: Swift.String
  public var max: Swift.String
  public init(from decoder: any Swift.Decoder) throws
  public func encode(to encoder: any Swift.Encoder) throws
}
